/*
 * generated by Xtext 2.10.0
 */
package com.github.funthomas424242.dsl.validation

import com.github.funthomas424242.dsl.ahnen.AhnenPackage
import com.github.funthomas424242.dsl.ahnen.Beziehung
import com.github.funthomas424242.dsl.ahnen.Familie
import com.github.funthomas424242.dsl.ahnen.Kinder
import com.github.funthomas424242.dsl.ahnen.Person
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class AhnenValidator extends AbstractAhnenValidator {
	
	
	@Check
	def void checkFamilyConsistence(Familie familie){
	    var Kinder kinder = familie.kinder;
	    while(kinder.kind != null){
	        checkKindBackRefToFamily(familie,kinder.kind);
	        kinder=kinder.next;
	    }
	}
	
    def void checkKindBackRefToFamily(Familie familie, Person kind){
        
        if( kind.beziehungen == null || kind.beziehungen.empty){
           warning("Person: "+kind.name+" benötigt eine Beziehung zur Familie: "+familie.name,
                AhnenPackage.Literals.FAMILIE__KINDER
           );
         return;
        }
        var boolean hasBackLink = false;
        for( Beziehung beziehung: kind.beziehungen){
            if( beziehung.beziehung != null &&
                beziehung.beziehung instanceof Familie && 
                beziehung.beziehung.name.equals(familie.name)
            ){
                hasBackLink = true;
            } 
        }
        
        if( !hasBackLink ){
          if( kind.beziehungen != null && !kind.beziehungen.empty ){
             warning("Person: "+kind.name+" benötigt eine Beziehung zur Familie: "+familie.name,
                 AhnenPackage.Literals.FAMILIE__KINDER
             );
          }
        }
    }
	
	
	@Check
	def void checkPersonPflichtfelder(Person person){
	    if( person.geschlecht == null){
	        error("Für Person "+person.name+" wurde keine Geschlecht ausgewählt.",AhnenPackage.Literals.PERSON__GESCHLECHT);
	    }
	}
	
//	@Check
//	def void checkBuch(Familienbuch buch){
//	    // Alle im Buch bekannten Familien ermitteln
//	    var HashSet<String> familien = new HashSet<String>();
//	    for( FamilienImport familienImport:buch.familien){
//	        familien.add(familienImport.familie.name);
//	    }
//	    // Im Buch fehlende Familien markieren
//	    for( buch.)
//	}
	
	

	
	
}
