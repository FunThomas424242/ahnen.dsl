/**
 * generated by Xtext 2.10.0
 */
package com.github.funthomas424242.dsl.ahnen.impl;

import com.github.funthomas424242.dsl.ahnen.AhnenPackage;
import com.github.funthomas424242.dsl.ahnen.Beziehung;
import com.github.funthomas424242.dsl.ahnen.Person;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Beziehung</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.BeziehungImpl#getBeziehung <em>Beziehung</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.BeziehungImpl#getVonDatum <em>Von Datum</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.BeziehungImpl#getBisDatum <em>Bis Datum</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.BeziehungImpl#getHochzeitstag <em>Hochzeitstag</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.BeziehungImpl#getScheidungstag <em>Scheidungstag</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BeziehungImpl extends MinimalEObjectImpl.Container implements Beziehung
{
  /**
   * The cached value of the '{@link #getBeziehung() <em>Beziehung</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBeziehung()
   * @generated
   * @ordered
   */
  protected Person beziehung;

  /**
   * The default value of the '{@link #getVonDatum() <em>Von Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVonDatum()
   * @generated
   * @ordered
   */
  protected static final String VON_DATUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVonDatum() <em>Von Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVonDatum()
   * @generated
   * @ordered
   */
  protected String vonDatum = VON_DATUM_EDEFAULT;

  /**
   * The default value of the '{@link #getBisDatum() <em>Bis Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBisDatum()
   * @generated
   * @ordered
   */
  protected static final String BIS_DATUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBisDatum() <em>Bis Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBisDatum()
   * @generated
   * @ordered
   */
  protected String bisDatum = BIS_DATUM_EDEFAULT;

  /**
   * The default value of the '{@link #getHochzeitstag() <em>Hochzeitstag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHochzeitstag()
   * @generated
   * @ordered
   */
  protected static final String HOCHZEITSTAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHochzeitstag() <em>Hochzeitstag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHochzeitstag()
   * @generated
   * @ordered
   */
  protected String hochzeitstag = HOCHZEITSTAG_EDEFAULT;

  /**
   * The default value of the '{@link #getScheidungstag() <em>Scheidungstag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheidungstag()
   * @generated
   * @ordered
   */
  protected static final String SCHEIDUNGSTAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getScheidungstag() <em>Scheidungstag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheidungstag()
   * @generated
   * @ordered
   */
  protected String scheidungstag = SCHEIDUNGSTAG_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BeziehungImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AhnenPackage.Literals.BEZIEHUNG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person getBeziehung()
  {
    if (beziehung != null && beziehung.eIsProxy())
    {
      InternalEObject oldBeziehung = (InternalEObject)beziehung;
      beziehung = (Person)eResolveProxy(oldBeziehung);
      if (beziehung != oldBeziehung)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AhnenPackage.BEZIEHUNG__BEZIEHUNG, oldBeziehung, beziehung));
      }
    }
    return beziehung;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person basicGetBeziehung()
  {
    return beziehung;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBeziehung(Person newBeziehung)
  {
    Person oldBeziehung = beziehung;
    beziehung = newBeziehung;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.BEZIEHUNG__BEZIEHUNG, oldBeziehung, beziehung));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVonDatum()
  {
    return vonDatum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVonDatum(String newVonDatum)
  {
    String oldVonDatum = vonDatum;
    vonDatum = newVonDatum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.BEZIEHUNG__VON_DATUM, oldVonDatum, vonDatum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBisDatum()
  {
    return bisDatum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBisDatum(String newBisDatum)
  {
    String oldBisDatum = bisDatum;
    bisDatum = newBisDatum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.BEZIEHUNG__BIS_DATUM, oldBisDatum, bisDatum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHochzeitstag()
  {
    return hochzeitstag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHochzeitstag(String newHochzeitstag)
  {
    String oldHochzeitstag = hochzeitstag;
    hochzeitstag = newHochzeitstag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.BEZIEHUNG__HOCHZEITSTAG, oldHochzeitstag, hochzeitstag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getScheidungstag()
  {
    return scheidungstag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setScheidungstag(String newScheidungstag)
  {
    String oldScheidungstag = scheidungstag;
    scheidungstag = newScheidungstag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.BEZIEHUNG__SCHEIDUNGSTAG, oldScheidungstag, scheidungstag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AhnenPackage.BEZIEHUNG__BEZIEHUNG:
        if (resolve) return getBeziehung();
        return basicGetBeziehung();
      case AhnenPackage.BEZIEHUNG__VON_DATUM:
        return getVonDatum();
      case AhnenPackage.BEZIEHUNG__BIS_DATUM:
        return getBisDatum();
      case AhnenPackage.BEZIEHUNG__HOCHZEITSTAG:
        return getHochzeitstag();
      case AhnenPackage.BEZIEHUNG__SCHEIDUNGSTAG:
        return getScheidungstag();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AhnenPackage.BEZIEHUNG__BEZIEHUNG:
        setBeziehung((Person)newValue);
        return;
      case AhnenPackage.BEZIEHUNG__VON_DATUM:
        setVonDatum((String)newValue);
        return;
      case AhnenPackage.BEZIEHUNG__BIS_DATUM:
        setBisDatum((String)newValue);
        return;
      case AhnenPackage.BEZIEHUNG__HOCHZEITSTAG:
        setHochzeitstag((String)newValue);
        return;
      case AhnenPackage.BEZIEHUNG__SCHEIDUNGSTAG:
        setScheidungstag((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AhnenPackage.BEZIEHUNG__BEZIEHUNG:
        setBeziehung((Person)null);
        return;
      case AhnenPackage.BEZIEHUNG__VON_DATUM:
        setVonDatum(VON_DATUM_EDEFAULT);
        return;
      case AhnenPackage.BEZIEHUNG__BIS_DATUM:
        setBisDatum(BIS_DATUM_EDEFAULT);
        return;
      case AhnenPackage.BEZIEHUNG__HOCHZEITSTAG:
        setHochzeitstag(HOCHZEITSTAG_EDEFAULT);
        return;
      case AhnenPackage.BEZIEHUNG__SCHEIDUNGSTAG:
        setScheidungstag(SCHEIDUNGSTAG_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AhnenPackage.BEZIEHUNG__BEZIEHUNG:
        return beziehung != null;
      case AhnenPackage.BEZIEHUNG__VON_DATUM:
        return VON_DATUM_EDEFAULT == null ? vonDatum != null : !VON_DATUM_EDEFAULT.equals(vonDatum);
      case AhnenPackage.BEZIEHUNG__BIS_DATUM:
        return BIS_DATUM_EDEFAULT == null ? bisDatum != null : !BIS_DATUM_EDEFAULT.equals(bisDatum);
      case AhnenPackage.BEZIEHUNG__HOCHZEITSTAG:
        return HOCHZEITSTAG_EDEFAULT == null ? hochzeitstag != null : !HOCHZEITSTAG_EDEFAULT.equals(hochzeitstag);
      case AhnenPackage.BEZIEHUNG__SCHEIDUNGSTAG:
        return SCHEIDUNGSTAG_EDEFAULT == null ? scheidungstag != null : !SCHEIDUNGSTAG_EDEFAULT.equals(scheidungstag);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (vonDatum: ");
    result.append(vonDatum);
    result.append(", bisDatum: ");
    result.append(bisDatum);
    result.append(", hochzeitstag: ");
    result.append(hochzeitstag);
    result.append(", scheidungstag: ");
    result.append(scheidungstag);
    result.append(')');
    return result.toString();
  }

} //BeziehungImpl
