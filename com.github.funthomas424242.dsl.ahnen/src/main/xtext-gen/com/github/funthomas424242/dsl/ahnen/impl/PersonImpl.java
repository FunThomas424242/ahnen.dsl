/**
 * generated by Xtext 2.10.0
 */
package com.github.funthomas424242.dsl.ahnen.impl;

import com.github.funthomas424242.dsl.ahnen.AhnenPackage;
import com.github.funthomas424242.dsl.ahnen.Beziehung;
import com.github.funthomas424242.dsl.ahnen.Ereignis;
import com.github.funthomas424242.dsl.ahnen.Geschlecht;
import com.github.funthomas424242.dsl.ahnen.Kinder;
import com.github.funthomas424242.dsl.ahnen.Person;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Person</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getLetzteAenderung <em>Letzte Aenderung</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getVorname <em>Vorname</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getMittelname <em>Mittelname</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getNachname <em>Nachname</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getGeburtsname <em>Geburtsname</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getRufname <em>Rufname</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getGeschlecht <em>Geschlecht</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getGeburtsDatum <em>Geburts Datum</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getTodesDatum <em>Todes Datum</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getVater <em>Vater</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getMutter <em>Mutter</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getKinder <em>Kinder</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getStiefkinder <em>Stiefkinder</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getBeziehungen <em>Beziehungen</em>}</li>
 *   <li>{@link com.github.funthomas424242.dsl.ahnen.impl.PersonImpl#getEreignisse <em>Ereignisse</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PersonImpl extends MinimalEObjectImpl.Container implements Person
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getLetzteAenderung() <em>Letzte Aenderung</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLetzteAenderung()
   * @generated
   * @ordered
   */
  protected static final String LETZTE_AENDERUNG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLetzteAenderung() <em>Letzte Aenderung</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLetzteAenderung()
   * @generated
   * @ordered
   */
  protected String letzteAenderung = LETZTE_AENDERUNG_EDEFAULT;

  /**
   * The default value of the '{@link #getVorname() <em>Vorname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVorname()
   * @generated
   * @ordered
   */
  protected static final String VORNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVorname() <em>Vorname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVorname()
   * @generated
   * @ordered
   */
  protected String vorname = VORNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getMittelname() <em>Mittelname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMittelname()
   * @generated
   * @ordered
   */
  protected static final String MITTELNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMittelname() <em>Mittelname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMittelname()
   * @generated
   * @ordered
   */
  protected String mittelname = MITTELNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getNachname() <em>Nachname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNachname()
   * @generated
   * @ordered
   */
  protected static final String NACHNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNachname() <em>Nachname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNachname()
   * @generated
   * @ordered
   */
  protected String nachname = NACHNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getGeburtsname() <em>Geburtsname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeburtsname()
   * @generated
   * @ordered
   */
  protected static final String GEBURTSNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGeburtsname() <em>Geburtsname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeburtsname()
   * @generated
   * @ordered
   */
  protected String geburtsname = GEBURTSNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getRufname() <em>Rufname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRufname()
   * @generated
   * @ordered
   */
  protected static final String RUFNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRufname() <em>Rufname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRufname()
   * @generated
   * @ordered
   */
  protected String rufname = RUFNAME_EDEFAULT;

  /**
   * The default value of the '{@link #getGeschlecht() <em>Geschlecht</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeschlecht()
   * @generated
   * @ordered
   */
  protected static final Geschlecht GESCHLECHT_EDEFAULT = Geschlecht.UNBEKANNT;

  /**
   * The cached value of the '{@link #getGeschlecht() <em>Geschlecht</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeschlecht()
   * @generated
   * @ordered
   */
  protected Geschlecht geschlecht = GESCHLECHT_EDEFAULT;

  /**
   * The default value of the '{@link #getGeburtsDatum() <em>Geburts Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeburtsDatum()
   * @generated
   * @ordered
   */
  protected static final String GEBURTS_DATUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGeburtsDatum() <em>Geburts Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGeburtsDatum()
   * @generated
   * @ordered
   */
  protected String geburtsDatum = GEBURTS_DATUM_EDEFAULT;

  /**
   * The default value of the '{@link #getTodesDatum() <em>Todes Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTodesDatum()
   * @generated
   * @ordered
   */
  protected static final String TODES_DATUM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTodesDatum() <em>Todes Datum</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTodesDatum()
   * @generated
   * @ordered
   */
  protected String todesDatum = TODES_DATUM_EDEFAULT;

  /**
   * The cached value of the '{@link #getVater() <em>Vater</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVater()
   * @generated
   * @ordered
   */
  protected Person vater;

  /**
   * The cached value of the '{@link #getMutter() <em>Mutter</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMutter()
   * @generated
   * @ordered
   */
  protected Person mutter;

  /**
   * The cached value of the '{@link #getKinder() <em>Kinder</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKinder()
   * @generated
   * @ordered
   */
  protected Kinder kinder;

  /**
   * The cached value of the '{@link #getStiefkinder() <em>Stiefkinder</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStiefkinder()
   * @generated
   * @ordered
   */
  protected Kinder stiefkinder;

  /**
   * The cached value of the '{@link #getBeziehungen() <em>Beziehungen</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBeziehungen()
   * @generated
   * @ordered
   */
  protected EList<Beziehung> beziehungen;

  /**
   * The cached value of the '{@link #getEreignisse() <em>Ereignisse</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEreignisse()
   * @generated
   * @ordered
   */
  protected EList<Ereignis> ereignisse;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PersonImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AhnenPackage.Literals.PERSON;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLetzteAenderung()
  {
    return letzteAenderung;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLetzteAenderung(String newLetzteAenderung)
  {
    String oldLetzteAenderung = letzteAenderung;
    letzteAenderung = newLetzteAenderung;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__LETZTE_AENDERUNG, oldLetzteAenderung, letzteAenderung));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVorname()
  {
    return vorname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVorname(String newVorname)
  {
    String oldVorname = vorname;
    vorname = newVorname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__VORNAME, oldVorname, vorname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMittelname()
  {
    return mittelname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMittelname(String newMittelname)
  {
    String oldMittelname = mittelname;
    mittelname = newMittelname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__MITTELNAME, oldMittelname, mittelname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNachname()
  {
    return nachname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNachname(String newNachname)
  {
    String oldNachname = nachname;
    nachname = newNachname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__NACHNAME, oldNachname, nachname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGeburtsname()
  {
    return geburtsname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGeburtsname(String newGeburtsname)
  {
    String oldGeburtsname = geburtsname;
    geburtsname = newGeburtsname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__GEBURTSNAME, oldGeburtsname, geburtsname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRufname()
  {
    return rufname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRufname(String newRufname)
  {
    String oldRufname = rufname;
    rufname = newRufname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__RUFNAME, oldRufname, rufname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Geschlecht getGeschlecht()
  {
    return geschlecht;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGeschlecht(Geschlecht newGeschlecht)
  {
    Geschlecht oldGeschlecht = geschlecht;
    geschlecht = newGeschlecht == null ? GESCHLECHT_EDEFAULT : newGeschlecht;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__GESCHLECHT, oldGeschlecht, geschlecht));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGeburtsDatum()
  {
    return geburtsDatum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGeburtsDatum(String newGeburtsDatum)
  {
    String oldGeburtsDatum = geburtsDatum;
    geburtsDatum = newGeburtsDatum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__GEBURTS_DATUM, oldGeburtsDatum, geburtsDatum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTodesDatum()
  {
    return todesDatum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTodesDatum(String newTodesDatum)
  {
    String oldTodesDatum = todesDatum;
    todesDatum = newTodesDatum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__TODES_DATUM, oldTodesDatum, todesDatum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person getVater()
  {
    if (vater != null && vater.eIsProxy())
    {
      InternalEObject oldVater = (InternalEObject)vater;
      vater = (Person)eResolveProxy(oldVater);
      if (vater != oldVater)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AhnenPackage.PERSON__VATER, oldVater, vater));
      }
    }
    return vater;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person basicGetVater()
  {
    return vater;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVater(Person newVater)
  {
    Person oldVater = vater;
    vater = newVater;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__VATER, oldVater, vater));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person getMutter()
  {
    if (mutter != null && mutter.eIsProxy())
    {
      InternalEObject oldMutter = (InternalEObject)mutter;
      mutter = (Person)eResolveProxy(oldMutter);
      if (mutter != oldMutter)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AhnenPackage.PERSON__MUTTER, oldMutter, mutter));
      }
    }
    return mutter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person basicGetMutter()
  {
    return mutter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMutter(Person newMutter)
  {
    Person oldMutter = mutter;
    mutter = newMutter;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__MUTTER, oldMutter, mutter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Kinder getKinder()
  {
    return kinder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKinder(Kinder newKinder, NotificationChain msgs)
  {
    Kinder oldKinder = kinder;
    kinder = newKinder;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__KINDER, oldKinder, newKinder);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setKinder(Kinder newKinder)
  {
    if (newKinder != kinder)
    {
      NotificationChain msgs = null;
      if (kinder != null)
        msgs = ((InternalEObject)kinder).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AhnenPackage.PERSON__KINDER, null, msgs);
      if (newKinder != null)
        msgs = ((InternalEObject)newKinder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AhnenPackage.PERSON__KINDER, null, msgs);
      msgs = basicSetKinder(newKinder, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__KINDER, newKinder, newKinder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Kinder getStiefkinder()
  {
    return stiefkinder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStiefkinder(Kinder newStiefkinder, NotificationChain msgs)
  {
    Kinder oldStiefkinder = stiefkinder;
    stiefkinder = newStiefkinder;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__STIEFKINDER, oldStiefkinder, newStiefkinder);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStiefkinder(Kinder newStiefkinder)
  {
    if (newStiefkinder != stiefkinder)
    {
      NotificationChain msgs = null;
      if (stiefkinder != null)
        msgs = ((InternalEObject)stiefkinder).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AhnenPackage.PERSON__STIEFKINDER, null, msgs);
      if (newStiefkinder != null)
        msgs = ((InternalEObject)newStiefkinder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AhnenPackage.PERSON__STIEFKINDER, null, msgs);
      msgs = basicSetStiefkinder(newStiefkinder, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AhnenPackage.PERSON__STIEFKINDER, newStiefkinder, newStiefkinder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Beziehung> getBeziehungen()
  {
    if (beziehungen == null)
    {
      beziehungen = new EObjectContainmentEList<Beziehung>(Beziehung.class, this, AhnenPackage.PERSON__BEZIEHUNGEN);
    }
    return beziehungen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Ereignis> getEreignisse()
  {
    if (ereignisse == null)
    {
      ereignisse = new EObjectContainmentEList<Ereignis>(Ereignis.class, this, AhnenPackage.PERSON__EREIGNISSE);
    }
    return ereignisse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AhnenPackage.PERSON__KINDER:
        return basicSetKinder(null, msgs);
      case AhnenPackage.PERSON__STIEFKINDER:
        return basicSetStiefkinder(null, msgs);
      case AhnenPackage.PERSON__BEZIEHUNGEN:
        return ((InternalEList<?>)getBeziehungen()).basicRemove(otherEnd, msgs);
      case AhnenPackage.PERSON__EREIGNISSE:
        return ((InternalEList<?>)getEreignisse()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AhnenPackage.PERSON__NAME:
        return getName();
      case AhnenPackage.PERSON__LETZTE_AENDERUNG:
        return getLetzteAenderung();
      case AhnenPackage.PERSON__VORNAME:
        return getVorname();
      case AhnenPackage.PERSON__MITTELNAME:
        return getMittelname();
      case AhnenPackage.PERSON__NACHNAME:
        return getNachname();
      case AhnenPackage.PERSON__GEBURTSNAME:
        return getGeburtsname();
      case AhnenPackage.PERSON__RUFNAME:
        return getRufname();
      case AhnenPackage.PERSON__GESCHLECHT:
        return getGeschlecht();
      case AhnenPackage.PERSON__GEBURTS_DATUM:
        return getGeburtsDatum();
      case AhnenPackage.PERSON__TODES_DATUM:
        return getTodesDatum();
      case AhnenPackage.PERSON__VATER:
        if (resolve) return getVater();
        return basicGetVater();
      case AhnenPackage.PERSON__MUTTER:
        if (resolve) return getMutter();
        return basicGetMutter();
      case AhnenPackage.PERSON__KINDER:
        return getKinder();
      case AhnenPackage.PERSON__STIEFKINDER:
        return getStiefkinder();
      case AhnenPackage.PERSON__BEZIEHUNGEN:
        return getBeziehungen();
      case AhnenPackage.PERSON__EREIGNISSE:
        return getEreignisse();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AhnenPackage.PERSON__NAME:
        setName((String)newValue);
        return;
      case AhnenPackage.PERSON__LETZTE_AENDERUNG:
        setLetzteAenderung((String)newValue);
        return;
      case AhnenPackage.PERSON__VORNAME:
        setVorname((String)newValue);
        return;
      case AhnenPackage.PERSON__MITTELNAME:
        setMittelname((String)newValue);
        return;
      case AhnenPackage.PERSON__NACHNAME:
        setNachname((String)newValue);
        return;
      case AhnenPackage.PERSON__GEBURTSNAME:
        setGeburtsname((String)newValue);
        return;
      case AhnenPackage.PERSON__RUFNAME:
        setRufname((String)newValue);
        return;
      case AhnenPackage.PERSON__GESCHLECHT:
        setGeschlecht((Geschlecht)newValue);
        return;
      case AhnenPackage.PERSON__GEBURTS_DATUM:
        setGeburtsDatum((String)newValue);
        return;
      case AhnenPackage.PERSON__TODES_DATUM:
        setTodesDatum((String)newValue);
        return;
      case AhnenPackage.PERSON__VATER:
        setVater((Person)newValue);
        return;
      case AhnenPackage.PERSON__MUTTER:
        setMutter((Person)newValue);
        return;
      case AhnenPackage.PERSON__KINDER:
        setKinder((Kinder)newValue);
        return;
      case AhnenPackage.PERSON__STIEFKINDER:
        setStiefkinder((Kinder)newValue);
        return;
      case AhnenPackage.PERSON__BEZIEHUNGEN:
        getBeziehungen().clear();
        getBeziehungen().addAll((Collection<? extends Beziehung>)newValue);
        return;
      case AhnenPackage.PERSON__EREIGNISSE:
        getEreignisse().clear();
        getEreignisse().addAll((Collection<? extends Ereignis>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AhnenPackage.PERSON__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AhnenPackage.PERSON__LETZTE_AENDERUNG:
        setLetzteAenderung(LETZTE_AENDERUNG_EDEFAULT);
        return;
      case AhnenPackage.PERSON__VORNAME:
        setVorname(VORNAME_EDEFAULT);
        return;
      case AhnenPackage.PERSON__MITTELNAME:
        setMittelname(MITTELNAME_EDEFAULT);
        return;
      case AhnenPackage.PERSON__NACHNAME:
        setNachname(NACHNAME_EDEFAULT);
        return;
      case AhnenPackage.PERSON__GEBURTSNAME:
        setGeburtsname(GEBURTSNAME_EDEFAULT);
        return;
      case AhnenPackage.PERSON__RUFNAME:
        setRufname(RUFNAME_EDEFAULT);
        return;
      case AhnenPackage.PERSON__GESCHLECHT:
        setGeschlecht(GESCHLECHT_EDEFAULT);
        return;
      case AhnenPackage.PERSON__GEBURTS_DATUM:
        setGeburtsDatum(GEBURTS_DATUM_EDEFAULT);
        return;
      case AhnenPackage.PERSON__TODES_DATUM:
        setTodesDatum(TODES_DATUM_EDEFAULT);
        return;
      case AhnenPackage.PERSON__VATER:
        setVater((Person)null);
        return;
      case AhnenPackage.PERSON__MUTTER:
        setMutter((Person)null);
        return;
      case AhnenPackage.PERSON__KINDER:
        setKinder((Kinder)null);
        return;
      case AhnenPackage.PERSON__STIEFKINDER:
        setStiefkinder((Kinder)null);
        return;
      case AhnenPackage.PERSON__BEZIEHUNGEN:
        getBeziehungen().clear();
        return;
      case AhnenPackage.PERSON__EREIGNISSE:
        getEreignisse().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AhnenPackage.PERSON__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AhnenPackage.PERSON__LETZTE_AENDERUNG:
        return LETZTE_AENDERUNG_EDEFAULT == null ? letzteAenderung != null : !LETZTE_AENDERUNG_EDEFAULT.equals(letzteAenderung);
      case AhnenPackage.PERSON__VORNAME:
        return VORNAME_EDEFAULT == null ? vorname != null : !VORNAME_EDEFAULT.equals(vorname);
      case AhnenPackage.PERSON__MITTELNAME:
        return MITTELNAME_EDEFAULT == null ? mittelname != null : !MITTELNAME_EDEFAULT.equals(mittelname);
      case AhnenPackage.PERSON__NACHNAME:
        return NACHNAME_EDEFAULT == null ? nachname != null : !NACHNAME_EDEFAULT.equals(nachname);
      case AhnenPackage.PERSON__GEBURTSNAME:
        return GEBURTSNAME_EDEFAULT == null ? geburtsname != null : !GEBURTSNAME_EDEFAULT.equals(geburtsname);
      case AhnenPackage.PERSON__RUFNAME:
        return RUFNAME_EDEFAULT == null ? rufname != null : !RUFNAME_EDEFAULT.equals(rufname);
      case AhnenPackage.PERSON__GESCHLECHT:
        return geschlecht != GESCHLECHT_EDEFAULT;
      case AhnenPackage.PERSON__GEBURTS_DATUM:
        return GEBURTS_DATUM_EDEFAULT == null ? geburtsDatum != null : !GEBURTS_DATUM_EDEFAULT.equals(geburtsDatum);
      case AhnenPackage.PERSON__TODES_DATUM:
        return TODES_DATUM_EDEFAULT == null ? todesDatum != null : !TODES_DATUM_EDEFAULT.equals(todesDatum);
      case AhnenPackage.PERSON__VATER:
        return vater != null;
      case AhnenPackage.PERSON__MUTTER:
        return mutter != null;
      case AhnenPackage.PERSON__KINDER:
        return kinder != null;
      case AhnenPackage.PERSON__STIEFKINDER:
        return stiefkinder != null;
      case AhnenPackage.PERSON__BEZIEHUNGEN:
        return beziehungen != null && !beziehungen.isEmpty();
      case AhnenPackage.PERSON__EREIGNISSE:
        return ereignisse != null && !ereignisse.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", letzteAenderung: ");
    result.append(letzteAenderung);
    result.append(", vorname: ");
    result.append(vorname);
    result.append(", mittelname: ");
    result.append(mittelname);
    result.append(", nachname: ");
    result.append(nachname);
    result.append(", geburtsname: ");
    result.append(geburtsname);
    result.append(", rufname: ");
    result.append(rufname);
    result.append(", geschlecht: ");
    result.append(geschlecht);
    result.append(", geburtsDatum: ");
    result.append(geburtsDatum);
    result.append(", todesDatum: ");
    result.append(todesDatum);
    result.append(')');
    return result.toString();
  }

} //PersonImpl
