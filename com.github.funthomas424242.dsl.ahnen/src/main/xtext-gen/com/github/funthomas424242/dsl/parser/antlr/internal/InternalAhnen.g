/*
 * generated by Xtext 2.10.0
 */
grammar InternalAhnen;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.github.funthomas424242.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.github.funthomas424242.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.github.funthomas424242.dsl.services.AhnenGrammarAccess;

}

@parser::members {

 	private AhnenGrammarAccess grammarAccess;

    public InternalAhnenParser(TokenStream input, AhnenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected AhnenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getDateiDateiartParserRuleCall_0());
			}
			lv_datei_0_0=ruleDateiart
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				set(
					$current,
					"datei",
					lv_datei_0_0,
					"com.github.funthomas424242.dsl.Ahnen.Dateiart");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDateiart
entryRuleDateiart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateiartRule()); }
	iv_ruleDateiart=ruleDateiart
	{ $current=$iv_ruleDateiart.current; }
	EOF;

// Rule Dateiart
ruleDateiart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDateiartAccess().getBuchFamilienbuchParserRuleCall_0_0());
				}
				lv_buch_0_0=ruleFamilienbuch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateiartRule());
					}
					set(
						$current,
						"buch",
						lv_buch_0_0,
						"com.github.funthomas424242.dsl.Ahnen.Familienbuch");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDateiartAccess().getFamilieFamilieParserRuleCall_1_0());
				}
				lv_familie_1_0=ruleFamilie
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateiartRule());
					}
					set(
						$current,
						"familie",
						lv_familie_1_0,
						"com.github.funthomas424242.dsl.Ahnen.Familie");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFamilie
entryRuleFamilie returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFamilieRule()); }
	iv_ruleFamilie=ruleFamilie
	{ $current=$iv_ruleFamilie.current; }
	EOF;

// Rule Familie
ruleFamilie returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFamilieAccess().getFamilieAction_0(),
					$current);
			}
		)
		otherlv_1='Familie'
		{
			newLeafNode(otherlv_1, grammarAccess.getFamilieAccess().getFamilieKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFamilieAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilieRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getFamilieAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFamilieAccess().getPersonenPersonParserRuleCall_4_0());
				}
				lv_personen_4_0=rulePerson
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFamilieRule());
					}
					add(
						$current,
						"personen",
						lv_personen_4_0,
						"com.github.funthomas424242.dsl.Ahnen.Person");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPersonAccess().getPersonAction_0(),
					$current);
			}
		)
		otherlv_1='Person'
		{
			newLeafNode(otherlv_1, grammarAccess.getPersonAccess().getPersonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPersonAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='Letzte'
		{
			newLeafNode(otherlv_4, grammarAccess.getPersonAccess().getLetzteKeyword_4());
		}
		otherlv_5='\u00C4nderung:'
		{
			newLeafNode(otherlv_5, grammarAccess.getPersonAccess().get√ÑnderungKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPersonAccess().getLetzteAenderungDATUMParserRuleCall_6_0());
				}
				lv_letzteAenderung_6_0=ruleDATUM
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPersonRule());
					}
					set(
						$current,
						"letzteAenderung",
						lv_letzteAenderung_6_0,
						"com.github.funthomas424242.dsl.Ahnen.DATUM");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='.'
		{
			newLeafNode(otherlv_7, grammarAccess.getPersonAccess().getFullStopKeyword_7());
		}
		otherlv_8='Vorname:'
		{
			newLeafNode(otherlv_8, grammarAccess.getPersonAccess().getVornameKeyword_8());
		}
		(
			(
				(
					lv_vorname_9_0=RULE_STRING
					{
						newLeafNode(lv_vorname_9_0, grammarAccess.getPersonAccess().getVornameSTRINGTerminalRuleCall_9_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonRule());
						}
						setWithLastConsumed(
							$current,
							"vorname",
							lv_vorname_9_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_10='unbekannt'
			{
				newLeafNode(otherlv_10, grammarAccess.getPersonAccess().getUnbekanntKeyword_9_1());
			}
		)
		otherlv_11='.'
		{
			newLeafNode(otherlv_11, grammarAccess.getPersonAccess().getFullStopKeyword_10());
		}
		otherlv_12='Mittelname:'
		{
			newLeafNode(otherlv_12, grammarAccess.getPersonAccess().getMittelnameKeyword_11());
		}
		(
			(
				(
					lv_mittelname_13_0=RULE_STRING
					{
						newLeafNode(lv_mittelname_13_0, grammarAccess.getPersonAccess().getMittelnameSTRINGTerminalRuleCall_12_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonRule());
						}
						setWithLastConsumed(
							$current,
							"mittelname",
							lv_mittelname_13_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_14='unbekannt'
			{
				newLeafNode(otherlv_14, grammarAccess.getPersonAccess().getUnbekanntKeyword_12_1());
			}
			    |
			otherlv_15='-'
			{
				newLeafNode(otherlv_15, grammarAccess.getPersonAccess().getHyphenMinusKeyword_12_2());
			}
		)
		otherlv_16='.'
		{
			newLeafNode(otherlv_16, grammarAccess.getPersonAccess().getFullStopKeyword_13());
		}
		otherlv_17='Nachname:'
		{
			newLeafNode(otherlv_17, grammarAccess.getPersonAccess().getNachnameKeyword_14());
		}
		(
			(
				(
					lv_nachname_18_0=RULE_STRING
					{
						newLeafNode(lv_nachname_18_0, grammarAccess.getPersonAccess().getNachnameSTRINGTerminalRuleCall_15_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonRule());
						}
						setWithLastConsumed(
							$current,
							"nachname",
							lv_nachname_18_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_19='unbekannt'
			{
				newLeafNode(otherlv_19, grammarAccess.getPersonAccess().getUnbekanntKeyword_15_1());
			}
		)
		otherlv_20='.'
		{
			newLeafNode(otherlv_20, grammarAccess.getPersonAccess().getFullStopKeyword_16());
		}
		otherlv_21='Geburtsname:'
		{
			newLeafNode(otherlv_21, grammarAccess.getPersonAccess().getGeburtsnameKeyword_17());
		}
		(
			(
				(
					lv_geburtsname_22_0=RULE_STRING
					{
						newLeafNode(lv_geburtsname_22_0, grammarAccess.getPersonAccess().getGeburtsnameSTRINGTerminalRuleCall_18_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonRule());
						}
						setWithLastConsumed(
							$current,
							"geburtsname",
							lv_geburtsname_22_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_23='unbekannt'
			{
				newLeafNode(otherlv_23, grammarAccess.getPersonAccess().getUnbekanntKeyword_18_1());
			}
		)
		otherlv_24='.'
		{
			newLeafNode(otherlv_24, grammarAccess.getPersonAccess().getFullStopKeyword_19());
		}
		otherlv_25='Rufname:'
		{
			newLeafNode(otherlv_25, grammarAccess.getPersonAccess().getRufnameKeyword_20());
		}
		(
			(
				(
					lv_rufname_26_0=RULE_STRING
					{
						newLeafNode(lv_rufname_26_0, grammarAccess.getPersonAccess().getRufnameSTRINGTerminalRuleCall_21_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonRule());
						}
						setWithLastConsumed(
							$current,
							"rufname",
							lv_rufname_26_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_27='unbekannt'
			{
				newLeafNode(otherlv_27, grammarAccess.getPersonAccess().getUnbekanntKeyword_21_1());
			}
		)
		otherlv_28='.'
		{
			newLeafNode(otherlv_28, grammarAccess.getPersonAccess().getFullStopKeyword_22());
		}
		otherlv_29='Geschlecht:'
		{
			newLeafNode(otherlv_29, grammarAccess.getPersonAccess().getGeschlechtKeyword_23());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPersonAccess().getGeschlechtGeschlechtEnumRuleCall_24_0());
				}
				lv_geschlecht_30_0=ruleGeschlecht
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPersonRule());
					}
					set(
						$current,
						"geschlecht",
						lv_geschlecht_30_0,
						"com.github.funthomas424242.dsl.Ahnen.Geschlecht");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_31='.'
		{
			newLeafNode(otherlv_31, grammarAccess.getPersonAccess().getFullStopKeyword_25());
		}
		otherlv_32='Geburtsdatum:'
		{
			newLeafNode(otherlv_32, grammarAccess.getPersonAccess().getGeburtsdatumKeyword_26());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getGeburtsDatumDATUMParserRuleCall_27_0_0());
					}
					lv_geburtsDatum_33_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						set(
							$current,
							"geburtsDatum",
							lv_geburtsDatum_33_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_34='unbekannt'
			{
				newLeafNode(otherlv_34, grammarAccess.getPersonAccess().getUnbekanntKeyword_27_1());
			}
		)
		otherlv_35='.'
		{
			newLeafNode(otherlv_35, grammarAccess.getPersonAccess().getFullStopKeyword_28());
		}
		otherlv_36='Todesdatum:'
		{
			newLeafNode(otherlv_36, grammarAccess.getPersonAccess().getTodesdatumKeyword_29());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getTodesDatumDATUMParserRuleCall_30_0_0());
					}
					lv_todesDatum_37_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						set(
							$current,
							"todesDatum",
							lv_todesDatum_37_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_38='unbekannt'
			{
				newLeafNode(otherlv_38, grammarAccess.getPersonAccess().getUnbekanntKeyword_30_1());
			}
			    |
			otherlv_39='lebend'
			{
				newLeafNode(otherlv_39, grammarAccess.getPersonAccess().getLebendKeyword_30_2());
			}
			    |
			otherlv_40='vermisst'
			{
				newLeafNode(otherlv_40, grammarAccess.getPersonAccess().getVermisstKeyword_30_3());
			}
		)
		otherlv_41='.'
		{
			newLeafNode(otherlv_41, grammarAccess.getPersonAccess().getFullStopKeyword_31());
		}
		otherlv_42='Vater:'
		{
			newLeafNode(otherlv_42, grammarAccess.getPersonAccess().getVaterKeyword_32());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonRule());
						}
					}
					otherlv_43=RULE_STRING
					{
						newLeafNode(otherlv_43, grammarAccess.getPersonAccess().getVaterPersonCrossReference_33_0_0());
					}
				)
			)?
			    |
			otherlv_44='unbekannt'
			{
				newLeafNode(otherlv_44, grammarAccess.getPersonAccess().getUnbekanntKeyword_33_1());
			}
			    |
			otherlv_45='unerfasst'
			{
				newLeafNode(otherlv_45, grammarAccess.getPersonAccess().getUnerfasstKeyword_33_2());
			}
		)
		otherlv_46='.'
		{
			newLeafNode(otherlv_46, grammarAccess.getPersonAccess().getFullStopKeyword_34());
		}
		otherlv_47='Mutter:'
		{
			newLeafNode(otherlv_47, grammarAccess.getPersonAccess().getMutterKeyword_35());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonRule());
						}
					}
					otherlv_48=RULE_STRING
					{
						newLeafNode(otherlv_48, grammarAccess.getPersonAccess().getMutterPersonCrossReference_36_0_0());
					}
				)
			)?
			    |
			otherlv_49='unbekannt'
			{
				newLeafNode(otherlv_49, grammarAccess.getPersonAccess().getUnbekanntKeyword_36_1());
			}
			    |
			otherlv_50='unerfasst'
			{
				newLeafNode(otherlv_50, grammarAccess.getPersonAccess().getUnerfasstKeyword_36_2());
			}
		)
		otherlv_51='.'
		{
			newLeafNode(otherlv_51, grammarAccess.getPersonAccess().getFullStopKeyword_37());
		}
		otherlv_52='Kinder:'
		{
			newLeafNode(otherlv_52, grammarAccess.getPersonAccess().getKinderKeyword_38());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getKinderKinderParserRuleCall_39_0_0());
					}
					lv_kinder_53_0=ruleKinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						set(
							$current,
							"kinder",
							lv_kinder_53_0,
							"com.github.funthomas424242.dsl.Ahnen.Kinder");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_54='keine'
			{
				newLeafNode(otherlv_54, grammarAccess.getPersonAccess().getKeineKeyword_39_1());
			}
		)
		otherlv_55='.'
		{
			newLeafNode(otherlv_55, grammarAccess.getPersonAccess().getFullStopKeyword_40());
		}
		otherlv_56='Stiefkinder:'
		{
			newLeafNode(otherlv_56, grammarAccess.getPersonAccess().getStiefkinderKeyword_41());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getStiefkinderKinderParserRuleCall_42_0_0());
					}
					lv_stiefkinder_57_0=ruleKinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						set(
							$current,
							"stiefkinder",
							lv_stiefkinder_57_0,
							"com.github.funthomas424242.dsl.Ahnen.Kinder");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_58='keine'
			{
				newLeafNode(otherlv_58, grammarAccess.getPersonAccess().getKeineKeyword_42_1());
			}
		)
		otherlv_59='.'
		{
			newLeafNode(otherlv_59, grammarAccess.getPersonAccess().getFullStopKeyword_43());
		}
		otherlv_60='Beziehungen:'
		{
			newLeafNode(otherlv_60, grammarAccess.getPersonAccess().getBeziehungenKeyword_44());
		}
		otherlv_61='{'
		{
			newLeafNode(otherlv_61, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_45());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getBeziehungenBeziehungParserRuleCall_46_0_0());
					}
					lv_beziehungen_62_0=ruleBeziehung
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						add(
							$current,
							"beziehungen",
							lv_beziehungen_62_0,
							"com.github.funthomas424242.dsl.Ahnen.Beziehung");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			    |
			otherlv_63='keine'
			{
				newLeafNode(otherlv_63, grammarAccess.getPersonAccess().getKeineKeyword_46_1());
			}
		)
		otherlv_64='}'
		{
			newLeafNode(otherlv_64, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_47());
		}
		otherlv_65='Ereignisse:'
		{
			newLeafNode(otherlv_65, grammarAccess.getPersonAccess().getEreignisseKeyword_48());
		}
		otherlv_66='{'
		{
			newLeafNode(otherlv_66, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_49());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getEreignisseEreignisParserRuleCall_50_0_0());
					}
					lv_ereignisse_67_0=ruleEreignis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						add(
							$current,
							"ereignisse",
							lv_ereignisse_67_0,
							"com.github.funthomas424242.dsl.Ahnen.Ereignis");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			    |
			(
				otherlv_68='keine'
				{
					newLeafNode(otherlv_68, grammarAccess.getPersonAccess().getKeineKeyword_50_1_0());
				}
				otherlv_69='bekannt'
				{
					newLeafNode(otherlv_69, grammarAccess.getPersonAccess().getBekanntKeyword_50_1_1());
				}
			)
		)
		otherlv_70='}'
		{
			newLeafNode(otherlv_70, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_51());
		}
		otherlv_71='}'
		{
			newLeafNode(otherlv_71, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_52());
		}
	)
;

// Entry rule entryRuleEreignis
entryRuleEreignis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEreignisRule()); }
	iv_ruleEreignis=ruleEreignis
	{ $current=$iv_ruleEreignis.current; }
	EOF;

// Rule Ereignis
ruleEreignis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEreignisAccess().getSchulausbildungParserRuleCall_0());
		}
		this_Schulausbildung_0=ruleSchulausbildung
		{
			$current = $this_Schulausbildung_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEreignisAccess().getTaetigkeitParserRuleCall_1());
		}
		this_Taetigkeit_1=ruleTaetigkeit
		{
			$current = $this_Taetigkeit_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSchulausbildung
entryRuleSchulausbildung returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchulausbildungRule()); }
	iv_ruleSchulausbildung=ruleSchulausbildung
	{ $current=$iv_ruleSchulausbildung.current; }
	EOF;

// Rule Schulausbildung
ruleSchulausbildung returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSchulausbildungAccess().getSchulausbildungAction_0(),
					$current);
			}
		)
		otherlv_1='Schulausbildung:'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchulausbildungAccess().getSchulausbildungKeyword_1());
		}
		otherlv_2='von'
		{
			newLeafNode(otherlv_2, grammarAccess.getSchulausbildungAccess().getVonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSchulausbildungAccess().getVonDATUMParserRuleCall_3_0_0());
					}
					lv_von_3_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchulausbildungRule());
						}
						set(
							$current,
							"von",
							lv_von_3_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_4='unbekannt'
			{
				newLeafNode(otherlv_4, grammarAccess.getSchulausbildungAccess().getUnbekanntKeyword_3_1());
			}
		)
		otherlv_5='bis'
		{
			newLeafNode(otherlv_5, grammarAccess.getSchulausbildungAccess().getBisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSchulausbildungAccess().getBisDATUMParserRuleCall_5_0_0());
					}
					lv_bis_6_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchulausbildungRule());
						}
						set(
							$current,
							"bis",
							lv_bis_6_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_7='unbekannt'
			{
				newLeafNode(otherlv_7, grammarAccess.getSchulausbildungAccess().getUnbekanntKeyword_5_1());
			}
		)
		otherlv_8='Abschluss:'
		{
			newLeafNode(otherlv_8, grammarAccess.getSchulausbildungAccess().getAbschlussKeyword_6());
		}
		(
			(
				(
					lv_abschluss_9_0=RULE_STRING
					{
						newLeafNode(lv_abschluss_9_0, grammarAccess.getSchulausbildungAccess().getAbschlussSTRINGTerminalRuleCall_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSchulausbildungRule());
						}
						setWithLastConsumed(
							$current,
							"abschluss",
							lv_abschluss_9_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_10='ohne'
			{
				newLeafNode(otherlv_10, grammarAccess.getSchulausbildungAccess().getOhneKeyword_7_1());
			}
			    |
			otherlv_11='abgebrochen'
			{
				newLeafNode(otherlv_11, grammarAccess.getSchulausbildungAccess().getAbgebrochenKeyword_7_2());
			}
		)
		otherlv_12='.'
		{
			newLeafNode(otherlv_12, grammarAccess.getSchulausbildungAccess().getFullStopKeyword_8());
		}
	)
;

// Entry rule entryRuleTaetigkeit
entryRuleTaetigkeit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaetigkeitRule()); }
	iv_ruleTaetigkeit=ruleTaetigkeit
	{ $current=$iv_ruleTaetigkeit.current; }
	EOF;

// Rule Taetigkeit
ruleTaetigkeit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTaetigkeitAccess().getTaetigkeitAction_0(),
					$current);
			}
		)
		otherlv_1='T\u00E4tigkeit:'
		{
			newLeafNode(otherlv_1, grammarAccess.getTaetigkeitAccess().getT√§tigkeitKeyword_1());
		}
		otherlv_2='als'
		{
			newLeafNode(otherlv_2, grammarAccess.getTaetigkeitAccess().getAlsKeyword_2());
		}
		(
			(
				(
					lv_beruf_3_0=RULE_STRING
					{
						newLeafNode(lv_beruf_3_0, grammarAccess.getTaetigkeitAccess().getBerufSTRINGTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaetigkeitRule());
						}
						setWithLastConsumed(
							$current,
							"beruf",
							lv_beruf_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_4='unbekannt'
			{
				newLeafNode(otherlv_4, grammarAccess.getTaetigkeitAccess().getUnbekanntKeyword_3_1());
			}
		)
		otherlv_5='bei'
		{
			newLeafNode(otherlv_5, grammarAccess.getTaetigkeitAccess().getBeiKeyword_4());
		}
		(
			(
				(
					lv_arbeitgeber_6_0=RULE_STRING
					{
						newLeafNode(lv_arbeitgeber_6_0, grammarAccess.getTaetigkeitAccess().getArbeitgeberSTRINGTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaetigkeitRule());
						}
						setWithLastConsumed(
							$current,
							"arbeitgeber",
							lv_arbeitgeber_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_7='unbekannt'
			{
				newLeafNode(otherlv_7, grammarAccess.getTaetigkeitAccess().getUnbekanntKeyword_5_1());
			}
		)
		otherlv_8='in'
		{
			newLeafNode(otherlv_8, grammarAccess.getTaetigkeitAccess().getInKeyword_6());
		}
		(
			(
				(
					lv_ort_9_0=RULE_STRING
					{
						newLeafNode(lv_ort_9_0, grammarAccess.getTaetigkeitAccess().getOrtSTRINGTerminalRuleCall_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaetigkeitRule());
						}
						setWithLastConsumed(
							$current,
							"ort",
							lv_ort_9_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			    |
			otherlv_10='unbekannt'
			{
				newLeafNode(otherlv_10, grammarAccess.getTaetigkeitAccess().getUnbekanntKeyword_7_1());
			}
		)
		otherlv_11='von'
		{
			newLeafNode(otherlv_11, grammarAccess.getTaetigkeitAccess().getVonKeyword_8());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTaetigkeitAccess().getVonDATUMParserRuleCall_9_0_0());
					}
					lv_von_12_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaetigkeitRule());
						}
						set(
							$current,
							"von",
							lv_von_12_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_13='unbekannt'
			{
				newLeafNode(otherlv_13, grammarAccess.getTaetigkeitAccess().getUnbekanntKeyword_9_1());
			}
		)
		otherlv_14='bis'
		{
			newLeafNode(otherlv_14, grammarAccess.getTaetigkeitAccess().getBisKeyword_10());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTaetigkeitAccess().getBisDATUMParserRuleCall_11_0_0());
					}
					lv_bis_15_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaetigkeitRule());
						}
						set(
							$current,
							"bis",
							lv_bis_15_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_16='unbekannt'
			{
				newLeafNode(otherlv_16, grammarAccess.getTaetigkeitAccess().getUnbekanntKeyword_11_1());
			}
		)
		otherlv_17='.'
		{
			newLeafNode(otherlv_17, grammarAccess.getTaetigkeitAccess().getFullStopKeyword_12());
		}
	)
;

// Entry rule entryRuleKinder
entryRuleKinder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKinderRule()); }
	iv_ruleKinder=ruleKinder
	{ $current=$iv_ruleKinder.current; }
	EOF;

// Rule Kinder
ruleKinder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getKinderAccess().getKinderAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKinderRule());
						}
					}
					otherlv_1=RULE_STRING
					{
						newLeafNode(otherlv_1, grammarAccess.getKinderAccess().getKindPersonCrossReference_1_0_0());
					}
				)
			)
			    |
			otherlv_2='unbekannt'
			{
				newLeafNode(otherlv_2, grammarAccess.getKinderAccess().getUnbekanntKeyword_1_1());
			}
			    |
			otherlv_3='unerfasst'
			{
				newLeafNode(otherlv_3, grammarAccess.getKinderAccess().getUnerfasstKeyword_1_2());
			}
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getKinderAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKinderAccess().getNextKinderParserRuleCall_2_1_0());
					}
					lv_next_5_0=ruleKinder
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKinderRule());
						}
						set(
							$current,
							"next",
							lv_next_5_0,
							"com.github.funthomas424242.dsl.Ahnen.Kinder");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleBeziehung
entryRuleBeziehung returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeziehungRule()); }
	iv_ruleBeziehung=ruleBeziehung
	{ $current=$iv_ruleBeziehung.current; }
	EOF;

// Rule Beziehung
ruleBeziehung returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBeziehungAccess().getBeziehungAction_0(),
					$current);
			}
		)
		otherlv_1='Beziehung:'
		{
			newLeafNode(otherlv_1, grammarAccess.getBeziehungAccess().getBeziehungKeyword_1());
		}
		otherlv_2='mit'
		{
			newLeafNode(otherlv_2, grammarAccess.getBeziehungAccess().getMitKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBeziehungRule());
						}
					}
					otherlv_3=RULE_STRING
					{
						newLeafNode(otherlv_3, grammarAccess.getBeziehungAccess().getBeziehungPersonCrossReference_3_0_0());
					}
				)
			)
			    |
			otherlv_4='unbekannt'
			{
				newLeafNode(otherlv_4, grammarAccess.getBeziehungAccess().getUnbekanntKeyword_3_1());
			}
			    |
			otherlv_5='unerfasst'
			{
				newLeafNode(otherlv_5, grammarAccess.getBeziehungAccess().getUnerfasstKeyword_3_2());
			}
		)
		otherlv_6='.'
		{
			newLeafNode(otherlv_6, grammarAccess.getBeziehungAccess().getFullStopKeyword_4());
		}
		otherlv_7='von:'
		{
			newLeafNode(otherlv_7, grammarAccess.getBeziehungAccess().getVonKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBeziehungAccess().getVonDatumDATUMParserRuleCall_6_0_0());
					}
					lv_vonDatum_8_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBeziehungRule());
						}
						set(
							$current,
							"vonDatum",
							lv_vonDatum_8_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_9='unbekannt'
			{
				newLeafNode(otherlv_9, grammarAccess.getBeziehungAccess().getUnbekanntKeyword_6_1());
			}
		)
		otherlv_10='bis:'
		{
			newLeafNode(otherlv_10, grammarAccess.getBeziehungAccess().getBisKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBeziehungAccess().getBisDatumDATUMParserRuleCall_8_0_0());
					}
					lv_bisDatum_11_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBeziehungRule());
						}
						set(
							$current,
							"bisDatum",
							lv_bisDatum_11_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_12='unbekannt'
			{
				newLeafNode(otherlv_12, grammarAccess.getBeziehungAccess().getUnbekanntKeyword_8_1());
			}
			    |
			otherlv_13='andauernd'
			{
				newLeafNode(otherlv_13, grammarAccess.getBeziehungAccess().getAndauerndKeyword_8_2());
			}
		)
		otherlv_14='.'
		{
			newLeafNode(otherlv_14, grammarAccess.getBeziehungAccess().getFullStopKeyword_9());
		}
		otherlv_15='Hochzeit:'
		{
			newLeafNode(otherlv_15, grammarAccess.getBeziehungAccess().getHochzeitKeyword_10());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBeziehungAccess().getHochzeitstagDATUMParserRuleCall_11_0_0());
					}
					lv_hochzeitstag_16_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBeziehungRule());
						}
						set(
							$current,
							"hochzeitstag",
							lv_hochzeitstag_16_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_17='unbekannt'
			{
				newLeafNode(otherlv_17, grammarAccess.getBeziehungAccess().getUnbekanntKeyword_11_1());
			}
			    |
			otherlv_18='-'
			{
				newLeafNode(otherlv_18, grammarAccess.getBeziehungAccess().getHyphenMinusKeyword_11_2());
			}
		)
		otherlv_19='.'
		{
			newLeafNode(otherlv_19, grammarAccess.getBeziehungAccess().getFullStopKeyword_12());
		}
		otherlv_20='Scheidung:'
		{
			newLeafNode(otherlv_20, grammarAccess.getBeziehungAccess().getScheidungKeyword_13());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBeziehungAccess().getScheidungstagDATUMParserRuleCall_14_0_0());
					}
					lv_scheidungstag_21_0=ruleDATUM
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBeziehungRule());
						}
						set(
							$current,
							"scheidungstag",
							lv_scheidungstag_21_0,
							"com.github.funthomas424242.dsl.Ahnen.DATUM");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			otherlv_22='unbekannt'
			{
				newLeafNode(otherlv_22, grammarAccess.getBeziehungAccess().getUnbekanntKeyword_14_1());
			}
			    |
			otherlv_23='unabsehbar'
			{
				newLeafNode(otherlv_23, grammarAccess.getBeziehungAccess().getUnabsehbarKeyword_14_2());
			}
			    |
			otherlv_24='demn\u00E4chst'
			{
				newLeafNode(otherlv_24, grammarAccess.getBeziehungAccess().getDemn√§chstKeyword_14_3());
			}
			    |
			otherlv_25='-'
			{
				newLeafNode(otherlv_25, grammarAccess.getBeziehungAccess().getHyphenMinusKeyword_14_4());
			}
		)
		otherlv_26='.'
		{
			newLeafNode(otherlv_26, grammarAccess.getBeziehungAccess().getFullStopKeyword_15());
		}
	)
;

// Entry rule entryRuleFamilienbuch
entryRuleFamilienbuch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFamilienbuchRule()); }
	iv_ruleFamilienbuch=ruleFamilienbuch
	{ $current=$iv_ruleFamilienbuch.current; }
	EOF;

// Rule Familienbuch
ruleFamilienbuch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Familienbuch'
		{
			newLeafNode(otherlv_0, grammarAccess.getFamilienbuchAccess().getFamilienbuchKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFamilienbuchAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilienbuchRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getFamilienbuchAccess().getSemicolonKeyword_2());
		}
		otherlv_3='Familie:'
		{
			newLeafNode(otherlv_3, grammarAccess.getFamilienbuchAccess().getFamilieKeyword_3());
		}
		(
			(
				lv_familie_4_0=RULE_STRING
				{
					newLeafNode(lv_familie_4_0, grammarAccess.getFamilienbuchAccess().getFamilieSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilienbuchRule());
					}
					setWithLastConsumed(
						$current,
						"familie",
						lv_familie_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getFamilienbuchAccess().getFullStopKeyword_5());
		}
		otherlv_6='Person:'
		{
			newLeafNode(otherlv_6, grammarAccess.getFamilienbuchAccess().getPersonKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilienbuchRule());
					}
				}
				otherlv_7=RULE_STRING
				{
					newLeafNode(otherlv_7, grammarAccess.getFamilienbuchAccess().getPersonPersonCrossReference_7_0());
				}
			)
		)
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getFamilienbuchAccess().getFullStopKeyword_8());
		}
		otherlv_9='Version:'
		{
			newLeafNode(otherlv_9, grammarAccess.getFamilienbuchAccess().getVersionKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFamilienbuchAccess().getVersionVERSIONParserRuleCall_10_0());
				}
				lv_version_10_0=ruleVERSION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFamilienbuchRule());
					}
					set(
						$current,
						"version",
						lv_version_10_0,
						"com.github.funthomas424242.dsl.Ahnen.VERSION");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='.'
		{
			newLeafNode(otherlv_11, grammarAccess.getFamilienbuchAccess().getFullStopKeyword_11());
		}
		otherlv_12='Titel:'
		{
			newLeafNode(otherlv_12, grammarAccess.getFamilienbuchAccess().getTitelKeyword_12());
		}
		(
			(
				lv_titel_13_0=RULE_STRING
				{
					newLeafNode(lv_titel_13_0, grammarAccess.getFamilienbuchAccess().getTitelSTRINGTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilienbuchRule());
					}
					setWithLastConsumed(
						$current,
						"titel",
						lv_titel_13_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_14='.'
		{
			newLeafNode(otherlv_14, grammarAccess.getFamilienbuchAccess().getFullStopKeyword_14());
		}
		otherlv_15='Vorwort:'
		{
			newLeafNode(otherlv_15, grammarAccess.getFamilienbuchAccess().getVorwortKeyword_15());
		}
		otherlv_16='{'
		{
			newLeafNode(otherlv_16, grammarAccess.getFamilienbuchAccess().getLeftCurlyBracketKeyword_16());
		}
		(
			(
				lv_vorwort_17_0=RULE_STRING
				{
					newLeafNode(lv_vorwort_17_0, grammarAccess.getFamilienbuchAccess().getVorwortSTRINGTerminalRuleCall_17_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilienbuchRule());
					}
					setWithLastConsumed(
						$current,
						"vorwort",
						lv_vorwort_17_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getFamilienbuchAccess().getRightCurlyBracketKeyword_18());
		}
		otherlv_19='Autor:'
		{
			newLeafNode(otherlv_19, grammarAccess.getFamilienbuchAccess().getAutorKeyword_19());
		}
		otherlv_20='{'
		{
			newLeafNode(otherlv_20, grammarAccess.getFamilienbuchAccess().getLeftCurlyBracketKeyword_20());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFamilienbuchAccess().getAutorAutorParserRuleCall_21_0());
				}
				lv_autor_21_0=ruleAutor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFamilienbuchRule());
					}
					set(
						$current,
						"autor",
						lv_autor_21_0,
						"com.github.funthomas424242.dsl.Ahnen.Autor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getFamilienbuchAccess().getRightCurlyBracketKeyword_22());
		}
		otherlv_23='Familien:'
		{
			newLeafNode(otherlv_23, grammarAccess.getFamilienbuchAccess().getFamilienKeyword_23());
		}
		otherlv_24='{'
		{
			newLeafNode(otherlv_24, grammarAccess.getFamilienbuchAccess().getLeftCurlyBracketKeyword_24());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFamilienbuchAccess().getFamilienFamilienImportParserRuleCall_25_0());
				}
				lv_familien_25_0=ruleFamilienImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFamilienbuchRule());
					}
					add(
						$current,
						"familien",
						lv_familien_25_0,
						"com.github.funthomas424242.dsl.Ahnen.FamilienImport");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_26='}'
		{
			newLeafNode(otherlv_26, grammarAccess.getFamilienbuchAccess().getRightCurlyBracketKeyword_26());
		}
	)
;

// Entry rule entryRuleFamilienImport
entryRuleFamilienImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFamilienImportRule()); }
	iv_ruleFamilienImport=ruleFamilienImport
	{ $current=$iv_ruleFamilienImport.current; }
	EOF;

// Rule FamilienImport
ruleFamilienImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getFamilienImportAccess().getImportKeyword_0());
		}
		otherlv_1='familie'
		{
			newLeafNode(otherlv_1, grammarAccess.getFamilienImportAccess().getFamilieKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilienImportRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getFamilienImportAccess().getFamilieFamilieCrossReference_2_0());
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getFamilienImportAccess().getFullStopKeyword_3());
		}
	)
;

// Entry rule entryRuleAutor
entryRuleAutor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAutorRule()); }
	iv_ruleAutor=ruleAutor
	{ $current=$iv_ruleAutor.current; }
	EOF;

// Rule Autor
ruleAutor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Vorname:'
		{
			newLeafNode(otherlv_0, grammarAccess.getAutorAccess().getVornameKeyword_0());
		}
		(
			(
				lv_vorname_1_0=RULE_STRING
				{
					newLeafNode(lv_vorname_1_0, grammarAccess.getAutorAccess().getVornameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAutorRule());
					}
					setWithLastConsumed(
						$current,
						"vorname",
						lv_vorname_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getAutorAccess().getFullStopKeyword_2());
		}
		otherlv_3='Name:'
		{
			newLeafNode(otherlv_3, grammarAccess.getAutorAccess().getNameKeyword_3());
		}
		(
			(
				lv_nachname_4_0=RULE_STRING
				{
					newLeafNode(lv_nachname_4_0, grammarAccess.getAutorAccess().getNachnameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAutorRule());
					}
					setWithLastConsumed(
						$current,
						"nachname",
						lv_nachname_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getAutorAccess().getFullStopKeyword_5());
		}
		otherlv_6='Organisation'
		{
			newLeafNode(otherlv_6, grammarAccess.getAutorAccess().getOrganisationKeyword_6());
		}
		(
			(
				lv_organisationsName_7_0=RULE_STRING
				{
					newLeafNode(lv_organisationsName_7_0, grammarAccess.getAutorAccess().getOrganisationsNameSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAutorRule());
					}
					setWithLastConsumed(
						$current,
						"organisationsName",
						lv_organisationsName_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_8='.'
		{
			newLeafNode(otherlv_8, grammarAccess.getAutorAccess().getFullStopKeyword_8());
		}
	)
;

// Entry rule entryRuleVERSION
entryRuleVERSION returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVERSIONRule()); }
	iv_ruleVERSION=ruleVERSION
	{ $current=$iv_ruleVERSION.current.getText(); }
	EOF;

// Rule VERSION
ruleVERSION returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVERSIONAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVERSIONAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getVERSIONAccess().getINTTerminalRuleCall_2());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVERSIONAccess().getFullStopKeyword_3());
		}
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getVERSIONAccess().getINTTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleDATUM
entryRuleDATUM returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDATUMRule()); }
	iv_ruleDATUM=ruleDATUM
	{ $current=$iv_ruleDATUM.current.getText(); }
	EOF;

// Rule DATUM
ruleDATUM returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DATE_0=RULE_DATE
	{
		$current.merge(this_DATE_0);
	}
	{
		newLeafNode(this_DATE_0, grammarAccess.getDATUMAccess().getDATETerminalRuleCall());
	}
;

// Rule Geschlecht
ruleGeschlecht returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='unbekannt'
			{
				$current = grammarAccess.getGeschlechtAccess().getUnbekanntEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGeschlechtAccess().getUnbekanntEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='m\u00E4nnlich'
			{
				$current = grammarAccess.getGeschlechtAccess().getMaennlichEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGeschlechtAccess().getMaennlichEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='weiblich'
			{
				$current = grammarAccess.getGeschlechtAccess().getWeiblichEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGeschlechtAccess().getWeiblichEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_DATE : '0'..'9' '0'..'9' '.' '0'..'9' '0'..'9' '.' '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
